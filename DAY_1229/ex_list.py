# --------------------------------------------------------------
# 리스트(list) 데이터 타입
#   - 여러 종류의 여러 개의 데이터를 저장하는 타입
#   - 문법 : [데이터1, 데이터2, ..., 데이터N]
#   - 특징 : 데이터 하나 하나를 요소/원소 라고 합니다.
#           하나 하나의 요소/원소를 식별하기 위해서 인덱싱(indexing)
#   - 순서가 있는 데이터 타입 => 시퀀스 데이터 타입
# --------------------------------------------------------------

# 리스트 데이터 생성 ---------------------------------------------
# 숫자 10개를 메모리에 저장
no1 = 10
no2 = 30
no3 = 100
no4 = 5
no5 = 103
no6 = 17
no7 = 23
no8 = 31
no9 = 29
no10 = 32

#     0    1   2   3   4   5   6   7   8   9
#    -10  -9  -8  -7  -6  -5  -4  -3  -2  -1
no = [10, 30, 100, 5, 103, 17, 23, 31, 29, 32]
print(f' id(no)    => {id(no)} ')
print(f' id(no[0]) => {id(no[0])}')
print(f' id(no[1]) => {id(no[1])}')
print(f' id(no[2]) => {id(no[2])}')

# 리스트의 원소/요소 한 개씩 접근하는 방법 => 변수명[인덱스]
# - 왼쪽 => 오른쪽 : 0 ~
# - 오른쪽 => 왼쪽 : -1~
# => 슬라이싱 가능
# ---------------------------------------------------------
# 마지막 3개의 점수만 출력해 주세요~
print(no[-3:])

# 짝 수번째 요소만 출력해 주세요~~ => 0 2 4 6 8
print(f'짝수 요소만 출력 : {no[::2]}')



