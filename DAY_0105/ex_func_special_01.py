# -----------------------------------------------------------------------------------
# 다양한 함수의 형태 - 특별한 함수(1)
# - 매개변수의 갯수를 유동적으로 가변으로 하는 함수
# - 형태: def 함수명(*data):
# - 가변인자 함수
# - 매개변수 갯수 : 0개 ~ N개
# -----------------------------------------------------------------------------------
# 2개 정수를 덧셈후 결과를 반환하는 함수 생성 --------------------------------------------
# -----------------------------------------------------------------------------------

def plus(x,y):
    return x + y

# 5개 정수를 더하는 함수
def addPlus(a,b,c,d,e):
    return a+b+c+d+e

# 3개 정수를 덧셈
def addThree(x,y,z):
    return x+y+z

# -------------------------------------------------------------
# 함수 기능 : 전달 받은 숫자를 모두 덧셈한 결과 반환 가능
# 함수 이름 : addNumber
# 매개 변수 : *nums
# 반 환 값  : 계산 결과
# -------------------------------------------------------------
def addNumber(*data):       # 튜플로 준다
    print(type(data))
    ret=0
    for d in data:
        ret += d
    return ret

# 함수 사용 즉 함수 호출 -----------------------------------------
print(addNumber(1,2,3))
print(addNumber(10))
print(addNumber())
print(addNumber(1,2,3,4,5,6,7,8,9))
# print(addNumber(range(1,11)))   # range 범위라 안됨


# *시퀀스/반복이 가능한 객체 => 내부에 모든 원소를 하나씩 풀어서 전달 : 언팩킹
print(addNumber(*range(1,11)))      # 앞에 *을 달면 unpacking하여 풀어준다

a = [11, 22, 33, 44]
print(*a)

aTuple = 'a','b','c'
aDict = {'name':'Hong','age':100}
print(a, aTuple, aDict)
print(*a, *aTuple, *aDict)      # 딕셔너리는 * 1개 찍으면 key값만 찍힌다
print(*aDict)      # 딕셔너리는 * 1개 찍으면 key값만 찍힌다

# print()는 가변인자 함수!
